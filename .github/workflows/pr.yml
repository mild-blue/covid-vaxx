name: CI

on:
  # manual dispatch
  workflow_dispatch:
  # run on PRs to master when - is opened,
  # new commit is pushed or is set as ready for review
  pull_request:
    types: [ opened, synchronize, ready_for_review ]
    branches:
      - master

jobs:
  run_tests:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    # disable run if the PR is draft (as our CLI creates PR as draft once the issue is in progress)
    if: github.event.pull_request.draft == false
    # use container to run the code as we need to use postgres
    container: adoptopenjdk/openjdk11:alpine
    # enable postgres
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
    # and run the pipeline
    steps:
      - uses: actions/checkout@v2

      # override template environment variables
      - name: Setup Environment Variables
        run: |
          echo "POSTGRES_HOST=postgres:5432" >> $GITHUB_ENV
          echo "POSTGRES_DB=postgres"  >> $GITHUB_ENV
          echo "POSTGRES_USER=postgres" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=postgres" >> $GITHUB_ENV

      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Execute Detekt
        run: |
          cd backend
          ./gradlew detekt --info

      - name: Execute Unit tests
        run: |
          cd backend
          ./gradlew test --info

  execute-code-smell:
    runs-on: ubuntu-20.04
    # disable run if the PR is draft (as our CLI creates PR as draft once the issue is in progress)
    if: github.event.pull_request.draft == false
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Execute Qodana Scan
        uses: JetBrains/qodana-action@v4.2.2
        with:
          linter: jetbrains/qodana-jvm

  build-container:
    runs-on: ubuntu-20.04
    # disable run if the PR is draft (as our CLI creates PR as draft once the issue is in progress)
    if: github.event.pull_request.draft == false
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2

        # setup docker actions https://github.com/docker/build-push-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Docker Image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          tags: mildblue/covid-vaxx-test
          push: false
